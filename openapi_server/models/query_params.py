# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.query_param import QueryParam
from openapi_server import util

from openapi_server.models.query_param import QueryParam  # noqa: E501

class QueryParams(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, params=None):  # noqa: E501
        """QueryParams - a model defined in OpenAPI

        :param params: The params of this QueryParams.  # noqa: E501
        :type params: List[QueryParam]
        """
        self.openapi_types = {
            'params': List[QueryParam]
        }

        self.attribute_map = {
            'params': 'params'
        }

        self._params = params

    @classmethod
    def from_dict(cls, dikt) -> 'QueryParams':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The QueryParams of this QueryParams.  # noqa: E501
        :rtype: QueryParams
        """
        return util.deserialize_model(dikt, cls)

    @property
    def params(self):
        """Gets the params of this QueryParams.

        List of query params  # noqa: E501

        :return: The params of this QueryParams.
        :rtype: List[QueryParam]
        """
        return self._params

    @params.setter
    def params(self, params):
        """Sets the params of this QueryParams.

        List of query params  # noqa: E501

        :param params: The params of this QueryParams.
        :type params: List[QueryParam]
        """

        self._params = params
